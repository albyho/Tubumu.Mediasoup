// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using System;
using System.Text.Json.Serialization;
using Google.FlatBuffers;

namespace FBS.WebRtcServer
{
    public struct TupleHash : IFlatbufferObject
    {
        private Table __p;
        public ByteBuffer ByteBuffer { get { return __p.bb; } }
        public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_5_26(); }
        public static TupleHash GetRootAsTupleHash(ByteBuffer _bb) { return GetRootAsTupleHash(_bb, new TupleHash()); }
        public static TupleHash GetRootAsTupleHash(ByteBuffer _bb, TupleHash obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
        public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
        public TupleHash __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

        public ulong TupleHash_ { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
        public string WebRtcTransportId { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetWebRtcTransportIdBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
        public ArraySegment<byte>? GetWebRtcTransportIdBytes() { return __p.__vector_as_arraysegment(6); }
#endif
        public byte[] GetWebRtcTransportIdArray() { return __p.__vector_as_array<byte>(6); }

        public static Offset<FBS.WebRtcServer.TupleHash> CreateTupleHash(FlatBufferBuilder builder,
            ulong tuple_hash = 0,
            StringOffset web_rtc_transport_idOffset = default(StringOffset))
        {
            builder.StartTable(2);
            TupleHash.AddTupleHash(builder, tuple_hash);
            TupleHash.AddWebRtcTransportId(builder, web_rtc_transport_idOffset);
            return TupleHash.EndTupleHash(builder);
        }

        public static void StartTupleHash(FlatBufferBuilder builder) { builder.StartTable(2); }
        public static void AddTupleHash(FlatBufferBuilder builder, ulong tupleHash) { builder.AddUlong(0, tupleHash, 0); }
        public static void AddWebRtcTransportId(FlatBufferBuilder builder, StringOffset webRtcTransportIdOffset) { builder.AddOffset(1, webRtcTransportIdOffset.Value, 0); }
        public static Offset<FBS.WebRtcServer.TupleHash> EndTupleHash(FlatBufferBuilder builder)
        {
            int o = builder.EndTable();
            builder.Required(o, 6);  // web_rtc_transport_id
            return new Offset<FBS.WebRtcServer.TupleHash>(o);
        }
        public TupleHashT UnPack()
        {
            var _o = new TupleHashT();
            this.UnPackTo(_o);
            return _o;
        }
        public void UnPackTo(TupleHashT _o)
        {
            _o.TupleHash_ = this.TupleHash_;
            _o.WebRtcTransportId = this.WebRtcTransportId;
        }
        public static Offset<FBS.WebRtcServer.TupleHash> Pack(FlatBufferBuilder builder, TupleHashT _o)
        {
            if(_o == null)
                return default(Offset<FBS.WebRtcServer.TupleHash>);
            var _web_rtc_transport_id = _o.WebRtcTransportId == null ? default(StringOffset) : builder.CreateString(_o.WebRtcTransportId);
            return CreateTupleHash(
              builder,
              _o.TupleHash_,
              _web_rtc_transport_id);
        }
    }

    public class TupleHashT
    {
        [JsonPropertyName("tuple_hash")]
        public ulong TupleHash_ { get; set; }
        [JsonPropertyName("web_rtc_transport_id")]
        public string WebRtcTransportId { get; set; }

        public TupleHashT()
        {
            this.TupleHash_ = 0;
            this.WebRtcTransportId = null;
        }
    }
}
