// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using Google.FlatBuffers;
using System.Text.Json.Serialization;

namespace FBS.DataConsumer
{
    public struct BufferedAmountLowNotification : IFlatbufferObject
    {
        private Table __p;
        public ByteBuffer ByteBuffer { get { return __p.bb; } }
        public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_5_26(); }
        public static BufferedAmountLowNotification GetRootAsBufferedAmountLowNotification(ByteBuffer _bb) { return GetRootAsBufferedAmountLowNotification(_bb, new BufferedAmountLowNotification()); }
        public static BufferedAmountLowNotification GetRootAsBufferedAmountLowNotification(ByteBuffer _bb, BufferedAmountLowNotification obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
        public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
        public BufferedAmountLowNotification __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

        public uint BufferedAmount { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

        public static Offset<FBS.DataConsumer.BufferedAmountLowNotification> CreateBufferedAmountLowNotification(FlatBufferBuilder builder,
            uint buffered_amount = 0)
        {
            builder.StartTable(1);
            BufferedAmountLowNotification.AddBufferedAmount(builder, buffered_amount);
            return BufferedAmountLowNotification.EndBufferedAmountLowNotification(builder);
        }

        public static void StartBufferedAmountLowNotification(FlatBufferBuilder builder) { builder.StartTable(1); }
        public static void AddBufferedAmount(FlatBufferBuilder builder, uint bufferedAmount) { builder.AddUint(0, bufferedAmount, 0); }
        public static Offset<FBS.DataConsumer.BufferedAmountLowNotification> EndBufferedAmountLowNotification(FlatBufferBuilder builder)
        {
            int o = builder.EndTable();
            return new Offset<FBS.DataConsumer.BufferedAmountLowNotification>(o);
        }
        public BufferedAmountLowNotificationT UnPack()
        {
            var _o = new BufferedAmountLowNotificationT();
            this.UnPackTo(_o);
            return _o;
        }
        public void UnPackTo(BufferedAmountLowNotificationT _o)
        {
            _o.BufferedAmount = this.BufferedAmount;
        }
        public static Offset<FBS.DataConsumer.BufferedAmountLowNotification> Pack(FlatBufferBuilder builder, BufferedAmountLowNotificationT _o)
        {
            if(_o == null)
                return default(Offset<FBS.DataConsumer.BufferedAmountLowNotification>);
            return CreateBufferedAmountLowNotification(
              builder,
              _o.BufferedAmount);
        }
    }

    public class BufferedAmountLowNotificationT
    {
        [JsonPropertyName("buffered_amount")]
        public uint BufferedAmount { get; set; }

        public BufferedAmountLowNotificationT()
        {
            this.BufferedAmount = 0;
        }
    }
}
