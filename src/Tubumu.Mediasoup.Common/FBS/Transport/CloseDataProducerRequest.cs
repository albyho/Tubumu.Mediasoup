// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using System.Text.Json.Serialization;

namespace FBS.Transport
{

    using global::System;
    using global::System.Collections.Generic;
    using global::Google.FlatBuffers;

    public struct CloseDataProducerRequest : IFlatbufferObject
    {
        private Table __p;
        public ByteBuffer ByteBuffer { get { return __p.bb; } }
        public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
        public static CloseDataProducerRequest GetRootAsCloseDataProducerRequest(ByteBuffer _bb) { return GetRootAsCloseDataProducerRequest(_bb, new CloseDataProducerRequest()); }
        public static CloseDataProducerRequest GetRootAsCloseDataProducerRequest(ByteBuffer _bb, CloseDataProducerRequest obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
        public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
        public CloseDataProducerRequest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

        public string DataProducerId { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDataProducerIdBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
        public ArraySegment<byte>? GetDataProducerIdBytes() { return __p.__vector_as_arraysegment(4); }
#endif
        public byte[] GetDataProducerIdArray() { return __p.__vector_as_array<byte>(4); }

        public static Offset<FBS.Transport.CloseDataProducerRequest> CreateCloseDataProducerRequest(FlatBufferBuilder builder,
            StringOffset data_producer_idOffset = default(StringOffset))
        {
            builder.StartTable(1);
            CloseDataProducerRequest.AddDataProducerId(builder, data_producer_idOffset);
            return CloseDataProducerRequest.EndCloseDataProducerRequest(builder);
        }

        public static void StartCloseDataProducerRequest(FlatBufferBuilder builder) { builder.StartTable(1); }
        public static void AddDataProducerId(FlatBufferBuilder builder, StringOffset dataProducerIdOffset) { builder.AddOffset(0, dataProducerIdOffset.Value, 0); }
        public static Offset<FBS.Transport.CloseDataProducerRequest> EndCloseDataProducerRequest(FlatBufferBuilder builder)
        {
            int o = builder.EndTable();
            builder.Required(o, 4);  // data_producer_id
            return new Offset<FBS.Transport.CloseDataProducerRequest>(o);
        }
        public CloseDataProducerRequestT UnPack()
        {
            var _o = new CloseDataProducerRequestT();
            this.UnPackTo(_o);
            return _o;
        }
        public void UnPackTo(CloseDataProducerRequestT _o)
        {
            _o.DataProducerId = this.DataProducerId;
        }
        public static Offset<FBS.Transport.CloseDataProducerRequest> Pack(FlatBufferBuilder builder, CloseDataProducerRequestT _o)
        {
            if(_o == null)
                return default(Offset<FBS.Transport.CloseDataProducerRequest>);
            var _data_producer_id = _o.DataProducerId == null ? default(StringOffset) : builder.CreateString(_o.DataProducerId);
            return CreateCloseDataProducerRequest(
              builder,
              _data_producer_id);
        }
    }

    public class CloseDataProducerRequestT
    {
        public string DataProducerId { get; set; }

        public CloseDataProducerRequestT()
        {
            this.DataProducerId = null;
        }
    }


    static public class CloseDataProducerRequestVerify
    {
        static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
        {
            return verifier.VerifyTableStart(tablePos)
              && verifier.VerifyString(tablePos, 4 /*DataProducerId*/, true)
              && verifier.VerifyTableEnd(tablePos);
        }
    }

}
