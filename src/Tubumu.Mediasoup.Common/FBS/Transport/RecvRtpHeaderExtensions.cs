// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using System.Text.Json.Serialization;

namespace FBS.Transport
{

    using global::System;
    using global::System.Collections.Generic;
    using global::Google.FlatBuffers;

    public struct RecvRtpHeaderExtensions : IFlatbufferObject
    {
        private Table __p;
        public ByteBuffer ByteBuffer { get { return __p.bb; } }
        public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
        public static RecvRtpHeaderExtensions GetRootAsRecvRtpHeaderExtensions(ByteBuffer _bb) { return GetRootAsRecvRtpHeaderExtensions(_bb, new RecvRtpHeaderExtensions()); }
        public static RecvRtpHeaderExtensions GetRootAsRecvRtpHeaderExtensions(ByteBuffer _bb, RecvRtpHeaderExtensions obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
        public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
        public RecvRtpHeaderExtensions __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

        public byte? Mid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte?)null; } }
        public byte? Rid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte?)null; } }
        public byte? Rrid { get { int o = __p.__offset(8); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte?)null; } }
        public byte? AbsSendTime { get { int o = __p.__offset(10); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte?)null; } }
        public byte? TransportWideCc01 { get { int o = __p.__offset(12); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte?)null; } }

        public static Offset<FBS.Transport.RecvRtpHeaderExtensions> CreateRecvRtpHeaderExtensions(FlatBufferBuilder builder,
            byte? mid = null,
            byte? rid = null,
            byte? rrid = null,
            byte? abs_send_time = null,
            byte? transport_wide_cc01 = null)
        {
            builder.StartTable(5);
            RecvRtpHeaderExtensions.AddTransportWideCc01(builder, transport_wide_cc01);
            RecvRtpHeaderExtensions.AddAbsSendTime(builder, abs_send_time);
            RecvRtpHeaderExtensions.AddRrid(builder, rrid);
            RecvRtpHeaderExtensions.AddRid(builder, rid);
            RecvRtpHeaderExtensions.AddMid(builder, mid);
            return RecvRtpHeaderExtensions.EndRecvRtpHeaderExtensions(builder);
        }

        public static void StartRecvRtpHeaderExtensions(FlatBufferBuilder builder) { builder.StartTable(5); }
        public static void AddMid(FlatBufferBuilder builder, byte? mid) { builder.AddByte(0, mid); }
        public static void AddRid(FlatBufferBuilder builder, byte? rid) { builder.AddByte(1, rid); }
        public static void AddRrid(FlatBufferBuilder builder, byte? rrid) { builder.AddByte(2, rrid); }
        public static void AddAbsSendTime(FlatBufferBuilder builder, byte? absSendTime) { builder.AddByte(3, absSendTime); }
        public static void AddTransportWideCc01(FlatBufferBuilder builder, byte? transportWideCc01) { builder.AddByte(4, transportWideCc01); }
        public static Offset<FBS.Transport.RecvRtpHeaderExtensions> EndRecvRtpHeaderExtensions(FlatBufferBuilder builder)
        {
            int o = builder.EndTable();
            return new Offset<FBS.Transport.RecvRtpHeaderExtensions>(o);
        }
        public RecvRtpHeaderExtensionsT UnPack()
        {
            var _o = new RecvRtpHeaderExtensionsT();
            this.UnPackTo(_o);
            return _o;
        }
        public void UnPackTo(RecvRtpHeaderExtensionsT _o)
        {
            _o.Mid = this.Mid;
            _o.Rid = this.Rid;
            _o.Rrid = this.Rrid;
            _o.AbsSendTime = this.AbsSendTime;
            _o.TransportWideCc01 = this.TransportWideCc01;
        }
        public static Offset<FBS.Transport.RecvRtpHeaderExtensions> Pack(FlatBufferBuilder builder, RecvRtpHeaderExtensionsT _o)
        {
            if(_o == null)
                return default(Offset<FBS.Transport.RecvRtpHeaderExtensions>);
            return CreateRecvRtpHeaderExtensions(
              builder,
              _o.Mid,
              _o.Rid,
              _o.Rrid,
              _o.AbsSendTime,
              _o.TransportWideCc01);
        }
    }

    public class RecvRtpHeaderExtensionsT
    {
        public byte? Mid { get; set; }

        public byte? Rid { get; set; }

        public byte? Rrid { get; set; }

        public byte? AbsSendTime { get; set; }

        public byte? TransportWideCc01 { get; set; }

        public RecvRtpHeaderExtensionsT()
        {
            this.Mid = null;
            this.Rid = null;
            this.Rrid = null;
            this.AbsSendTime = null;
            this.TransportWideCc01 = null;
        }
    }


    static public class RecvRtpHeaderExtensionsVerify
    {
        static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
        {
            return verifier.VerifyTableStart(tablePos)
              && verifier.VerifyField(tablePos, 4 /*Mid*/, 1 /*byte*/, 1, false)
              && verifier.VerifyField(tablePos, 6 /*Rid*/, 1 /*byte*/, 1, false)
              && verifier.VerifyField(tablePos, 8 /*Rrid*/, 1 /*byte*/, 1, false)
              && verifier.VerifyField(tablePos, 10 /*AbsSendTime*/, 1 /*byte*/, 1, false)
              && verifier.VerifyField(tablePos, 12 /*TransportWideCc01*/, 1 /*byte*/, 1, false)
              && verifier.VerifyTableEnd(tablePos);
        }
    }

}
