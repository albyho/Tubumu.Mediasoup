// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using System.Text.Json.Serialization;

namespace FBS.Transport
{

    using global::System;
    using global::System.Collections.Generic;
    using global::Google.FlatBuffers;

    public struct CloseProducerRequest : IFlatbufferObject
    {
        private Table __p;
        public ByteBuffer ByteBuffer { get { return __p.bb; } }
        public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
        public static CloseProducerRequest GetRootAsCloseProducerRequest(ByteBuffer _bb) { return GetRootAsCloseProducerRequest(_bb, new CloseProducerRequest()); }
        public static CloseProducerRequest GetRootAsCloseProducerRequest(ByteBuffer _bb, CloseProducerRequest obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
        public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
        public CloseProducerRequest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

        public string ProducerId { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetProducerIdBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
        public ArraySegment<byte>? GetProducerIdBytes() { return __p.__vector_as_arraysegment(4); }
#endif
        public byte[] GetProducerIdArray() { return __p.__vector_as_array<byte>(4); }

        public static Offset<FBS.Transport.CloseProducerRequest> CreateCloseProducerRequest(FlatBufferBuilder builder,
            StringOffset producer_idOffset = default(StringOffset))
        {
            builder.StartTable(1);
            CloseProducerRequest.AddProducerId(builder, producer_idOffset);
            return CloseProducerRequest.EndCloseProducerRequest(builder);
        }

        public static void StartCloseProducerRequest(FlatBufferBuilder builder) { builder.StartTable(1); }
        public static void AddProducerId(FlatBufferBuilder builder, StringOffset producerIdOffset) { builder.AddOffset(0, producerIdOffset.Value, 0); }
        public static Offset<FBS.Transport.CloseProducerRequest> EndCloseProducerRequest(FlatBufferBuilder builder)
        {
            int o = builder.EndTable();
            builder.Required(o, 4);  // producer_id
            return new Offset<FBS.Transport.CloseProducerRequest>(o);
        }
        public CloseProducerRequestT UnPack()
        {
            var _o = new CloseProducerRequestT();
            this.UnPackTo(_o);
            return _o;
        }
        public void UnPackTo(CloseProducerRequestT _o)
        {
            _o.ProducerId = this.ProducerId;
        }
        public static Offset<FBS.Transport.CloseProducerRequest> Pack(FlatBufferBuilder builder, CloseProducerRequestT _o)
        {
            if(_o == null)
                return default(Offset<FBS.Transport.CloseProducerRequest>);
            var _producer_id = _o.ProducerId == null ? default(StringOffset) : builder.CreateString(_o.ProducerId);
            return CreateCloseProducerRequest(
              builder,
              _producer_id);
        }
    }

    public class CloseProducerRequestT
    {
        public string ProducerId { get; set; }

        public CloseProducerRequestT()
        {
            this.ProducerId = null;
        }
    }


    static public class CloseProducerRequestVerify
    {
        static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
        {
            return verifier.VerifyTableStart(tablePos)
              && verifier.VerifyString(tablePos, 4 /*ProducerId*/, true)
              && verifier.VerifyTableEnd(tablePos);
        }
    }

}
