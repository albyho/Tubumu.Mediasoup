// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using System.Text.Json.Serialization;

namespace FBS.Common
{

    using global::System;
    using global::System.Collections.Generic;
    using global::Google.FlatBuffers;

    public struct StringUint8 : IFlatbufferObject
    {
        private Table __p;
        public ByteBuffer ByteBuffer { get { return __p.bb; } }
        public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
        public static StringUint8 GetRootAsStringUint8(ByteBuffer _bb) { return GetRootAsStringUint8(_bb, new StringUint8()); }
        public static StringUint8 GetRootAsStringUint8(ByteBuffer _bb, StringUint8 obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
        public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
        public StringUint8 __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

        public string Key { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetKeyBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
        public ArraySegment<byte>? GetKeyBytes() { return __p.__vector_as_arraysegment(4); }
#endif
        public byte[] GetKeyArray() { return __p.__vector_as_array<byte>(4); }
        public byte Value { get { int o = __p.__offset(6); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }

        public static Offset<FBS.Common.StringUint8> CreateStringUint8(FlatBufferBuilder builder,
            StringOffset keyOffset = default(StringOffset),
            byte value = 0)
        {
            builder.StartTable(2);
            StringUint8.AddKey(builder, keyOffset);
            StringUint8.AddValue(builder, value);
            return StringUint8.EndStringUint8(builder);
        }

        public static void StartStringUint8(FlatBufferBuilder builder) { builder.StartTable(2); }
        public static void AddKey(FlatBufferBuilder builder, StringOffset keyOffset) { builder.AddOffset(0, keyOffset.Value, 0); }
        public static void AddValue(FlatBufferBuilder builder, byte value) { builder.AddByte(1, value, 0); }
        public static Offset<FBS.Common.StringUint8> EndStringUint8(FlatBufferBuilder builder)
        {
            int o = builder.EndTable();
            builder.Required(o, 4);  // key
            return new Offset<FBS.Common.StringUint8>(o);
        }
        public StringUint8T UnPack()
        {
            var _o = new StringUint8T();
            this.UnPackTo(_o);
            return _o;
        }
        public void UnPackTo(StringUint8T _o)
        {
            _o.Key = this.Key;
            _o.Value = this.Value;
        }
        public static Offset<FBS.Common.StringUint8> Pack(FlatBufferBuilder builder, StringUint8T _o)
        {
            if(_o == null)
                return default(Offset<FBS.Common.StringUint8>);
            var _key = _o.Key == null ? default(StringOffset) : builder.CreateString(_o.Key);
            return CreateStringUint8(
              builder,
              _key,
              _o.Value);
        }
    }

    public class StringUint8T
    {
        public string Key { get; set; }

        public byte Value { get; set; }

        public StringUint8T()
        {
            this.Key = null;
            this.Value = 0;
        }
    }


    static public class StringUint8Verify
    {
        static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
        {
            return verifier.VerifyTableStart(tablePos)
              && verifier.VerifyString(tablePos, 4 /*Key*/, true)
              && verifier.VerifyField(tablePos, 6 /*Value*/, 1 /*byte*/, 1, false)
              && verifier.VerifyTableEnd(tablePos);
        }
    }

}
