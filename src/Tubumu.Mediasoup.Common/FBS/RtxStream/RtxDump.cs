// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using Google.FlatBuffers;
using System.Text.Json.Serialization;

namespace FBS.RtxStream
{
    public struct RtxDump : IFlatbufferObject
    {
        private Table __p;
        public ByteBuffer ByteBuffer { get { return __p.bb; } }
        public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_5_26(); }
        public static RtxDump GetRootAsRtxDump(ByteBuffer _bb) { return GetRootAsRtxDump(_bb, new RtxDump()); }
        public static RtxDump GetRootAsRtxDump(ByteBuffer _bb, RtxDump obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
        public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
        public RtxDump __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

        public FBS.RtxStream.Params? Params { get { int o = __p.__offset(4); return o != 0 ? (FBS.RtxStream.Params?)(new FBS.RtxStream.Params()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

        public static Offset<FBS.RtxStream.RtxDump> CreateRtxDump(FlatBufferBuilder builder,
            Offset<FBS.RtxStream.Params> @paramsOffset = default(Offset<FBS.RtxStream.Params>))
        {
            builder.StartTable(1);
            RtxDump.AddParams(builder, @paramsOffset);
            return RtxDump.EndRtxDump(builder);
        }

        public static void StartRtxDump(FlatBufferBuilder builder) { builder.StartTable(1); }
        public static void AddParams(FlatBufferBuilder builder, Offset<FBS.RtxStream.Params> paramsOffset) { builder.AddOffset(0, paramsOffset.Value, 0); }
        public static Offset<FBS.RtxStream.RtxDump> EndRtxDump(FlatBufferBuilder builder)
        {
            int o = builder.EndTable();
            builder.Required(o, 4);  // params
            return new Offset<FBS.RtxStream.RtxDump>(o);
        }
        public RtxDumpT UnPack()
        {
            var _o = new RtxDumpT();
            this.UnPackTo(_o);
            return _o;
        }
        public void UnPackTo(RtxDumpT _o)
        {
            _o.Params = this.Params.HasValue ? this.Params.Value.UnPack() : null;
        }
        public static Offset<FBS.RtxStream.RtxDump> Pack(FlatBufferBuilder builder, RtxDumpT _o)
        {
            if(_o == null)
                return default(Offset<FBS.RtxStream.RtxDump>);
            var _params = _o.Params == null ? default(Offset<FBS.RtxStream.Params>) : FBS.RtxStream.Params.Pack(builder, _o.Params);
            return CreateRtxDump(
              builder,
              _params);
        }
    }

    public class RtxDumpT
    {
        [JsonPropertyName("params")]
        public FBS.RtxStream.ParamsT Params { get; set; }

        public RtxDumpT()
        {
            this.Params = null;
        }
    }
}
