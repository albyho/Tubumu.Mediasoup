// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using System.Text.Json.Serialization;

namespace FBS.Worker
{

    using global::System;
    using global::System.Collections.Generic;
    using global::Google.FlatBuffers;

    public struct UpdateSettingsRequest : IFlatbufferObject
    {
        private Table __p;
        public ByteBuffer ByteBuffer { get { return __p.bb; } }
        public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
        public static UpdateSettingsRequest GetRootAsUpdateSettingsRequest(ByteBuffer _bb) { return GetRootAsUpdateSettingsRequest(_bb, new UpdateSettingsRequest()); }
        public static UpdateSettingsRequest GetRootAsUpdateSettingsRequest(ByteBuffer _bb, UpdateSettingsRequest obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
        public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
        public UpdateSettingsRequest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

        public string LogLevel { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLogLevelBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
        public ArraySegment<byte>? GetLogLevelBytes() { return __p.__vector_as_arraysegment(4); }
#endif
        public byte[] GetLogLevelArray() { return __p.__vector_as_array<byte>(4); }
        public string LogTags(int j) { int o = __p.__offset(6); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
        public int LogTagsLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }

        public static Offset<FBS.Worker.UpdateSettingsRequest> CreateUpdateSettingsRequest(FlatBufferBuilder builder,
            StringOffset log_levelOffset = default(StringOffset),
            VectorOffset log_tagsOffset = default(VectorOffset))
        {
            builder.StartTable(2);
            UpdateSettingsRequest.AddLogTags(builder, log_tagsOffset);
            UpdateSettingsRequest.AddLogLevel(builder, log_levelOffset);
            return UpdateSettingsRequest.EndUpdateSettingsRequest(builder);
        }

        public static void StartUpdateSettingsRequest(FlatBufferBuilder builder) { builder.StartTable(2); }
        public static void AddLogLevel(FlatBufferBuilder builder, StringOffset logLevelOffset) { builder.AddOffset(0, logLevelOffset.Value, 0); }
        public static void AddLogTags(FlatBufferBuilder builder, VectorOffset logTagsOffset) { builder.AddOffset(1, logTagsOffset.Value, 0); }
        public static VectorOffset CreateLogTagsVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for(int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
        public static VectorOffset CreateLogTagsVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
        public static VectorOffset CreateLogTagsVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
        public static VectorOffset CreateLogTagsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
        public static void StartLogTagsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
        public static Offset<FBS.Worker.UpdateSettingsRequest> EndUpdateSettingsRequest(FlatBufferBuilder builder)
        {
            int o = builder.EndTable();
            return new Offset<FBS.Worker.UpdateSettingsRequest>(o);
        }
        public UpdateSettingsRequestT UnPack()
        {
            var _o = new UpdateSettingsRequestT();
            this.UnPackTo(_o);
            return _o;
        }
        public void UnPackTo(UpdateSettingsRequestT _o)
        {
            _o.LogLevel = this.LogLevel;
            _o.LogTags = new List<string>();
            for(var _j = 0; _j < this.LogTagsLength; ++_j)
            { _o.LogTags.Add(this.LogTags(_j)); }
        }
        public static Offset<FBS.Worker.UpdateSettingsRequest> Pack(FlatBufferBuilder builder, UpdateSettingsRequestT _o)
        {
            if(_o == null)
                return default(Offset<FBS.Worker.UpdateSettingsRequest>);
            var _log_level = _o.LogLevel == null ? default(StringOffset) : builder.CreateString(_o.LogLevel);
            var _log_tags = default(VectorOffset);
            if(_o.LogTags != null)
            {
                var __log_tags = new StringOffset[_o.LogTags.Count];
                for(var _j = 0; _j < __log_tags.Length; ++_j)
                { __log_tags[_j] = builder.CreateString(_o.LogTags[_j]); }
                _log_tags = CreateLogTagsVector(builder, __log_tags);
            }
            return CreateUpdateSettingsRequest(
              builder,
              _log_level,
              _log_tags);
        }
    }

    public class UpdateSettingsRequestT
    {
        public string LogLevel { get; set; }

        public List<string> LogTags { get; set; }

        public UpdateSettingsRequestT()
        {
            this.LogLevel = null;
            this.LogTags = null;
        }
    }


    static public class UpdateSettingsRequestVerify
    {
        static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
        {
            return verifier.VerifyTableStart(tablePos)
              && verifier.VerifyString(tablePos, 4 /*LogLevel*/, false)
              && verifier.VerifyVectorOfStrings(tablePos, 6 /*LogTags*/, false)
              && verifier.VerifyTableEnd(tablePos);
        }
    }

}
