// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using System.Text.Json.Serialization;
using Google.FlatBuffers;

namespace FBS.PipeTransport
{
    public struct DumpResponse : IFlatbufferObject
    {
        private Table __p;
        public ByteBuffer ByteBuffer { get { return __p.bb; } }
        public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_5_26(); }
        public static DumpResponse GetRootAsDumpResponse(ByteBuffer _bb) { return GetRootAsDumpResponse(_bb, new DumpResponse()); }
        public static DumpResponse GetRootAsDumpResponse(ByteBuffer _bb, DumpResponse obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
        public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
        public DumpResponse __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

        public FBS.Transport.Dump? Base { get { int o = __p.__offset(4); return o != 0 ? (FBS.Transport.Dump?)(new FBS.Transport.Dump()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
        public FBS.Transport.Tuple? Tuple { get { int o = __p.__offset(6); return o != 0 ? (FBS.Transport.Tuple?)(new FBS.Transport.Tuple()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
        public bool Rtx { get { int o = __p.__offset(8); return o != 0 ? 0 != __p.bb.Get(o + __p.bb_pos) : (bool)false; } }
        public FBS.SrtpParameters.SrtpParameters? SrtpParameters { get { int o = __p.__offset(10); return o != 0 ? (FBS.SrtpParameters.SrtpParameters?)(new FBS.SrtpParameters.SrtpParameters()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

        public static Offset<FBS.PipeTransport.DumpResponse> CreateDumpResponse(FlatBufferBuilder builder,
            Offset<FBS.Transport.Dump> @baseOffset = default(Offset<FBS.Transport.Dump>),
            Offset<FBS.Transport.Tuple> tupleOffset = default(Offset<FBS.Transport.Tuple>),
            bool rtx = false,
            Offset<FBS.SrtpParameters.SrtpParameters> srtp_parametersOffset = default(Offset<FBS.SrtpParameters.SrtpParameters>))
        {
            builder.StartTable(4);
            DumpResponse.AddSrtpParameters(builder, srtp_parametersOffset);
            DumpResponse.AddTuple(builder, tupleOffset);
            DumpResponse.AddBase(builder, @baseOffset);
            DumpResponse.AddRtx(builder, rtx);
            return DumpResponse.EndDumpResponse(builder);
        }

        public static void StartDumpResponse(FlatBufferBuilder builder) { builder.StartTable(4); }
        public static void AddBase(FlatBufferBuilder builder, Offset<FBS.Transport.Dump> baseOffset) { builder.AddOffset(0, baseOffset.Value, 0); }
        public static void AddTuple(FlatBufferBuilder builder, Offset<FBS.Transport.Tuple> tupleOffset) { builder.AddOffset(1, tupleOffset.Value, 0); }
        public static void AddRtx(FlatBufferBuilder builder, bool rtx) { builder.AddBool(2, rtx, false); }
        public static void AddSrtpParameters(FlatBufferBuilder builder, Offset<FBS.SrtpParameters.SrtpParameters> srtpParametersOffset) { builder.AddOffset(3, srtpParametersOffset.Value, 0); }
        public static Offset<FBS.PipeTransport.DumpResponse> EndDumpResponse(FlatBufferBuilder builder)
        {
            int o = builder.EndTable();
            builder.Required(o, 4);  // base
            builder.Required(o, 6);  // tuple
            return new Offset<FBS.PipeTransport.DumpResponse>(o);
        }
        public DumpResponseT UnPack()
        {
            var _o = new DumpResponseT();
            this.UnPackTo(_o);
            return _o;
        }
        public void UnPackTo(DumpResponseT _o)
        {
            _o.Base = this.Base.HasValue ? this.Base.Value.UnPack() : null;
            _o.Tuple = this.Tuple.HasValue ? this.Tuple.Value.UnPack() : null;
            _o.Rtx = this.Rtx;
            _o.SrtpParameters = this.SrtpParameters.HasValue ? this.SrtpParameters.Value.UnPack() : null;
        }
        public static Offset<FBS.PipeTransport.DumpResponse> Pack(FlatBufferBuilder builder, DumpResponseT _o)
        {
            if(_o == null)
                return default(Offset<FBS.PipeTransport.DumpResponse>);
            var _base = _o.Base == null ? default(Offset<FBS.Transport.Dump>) : FBS.Transport.Dump.Pack(builder, _o.Base);
            var _tuple = _o.Tuple == null ? default(Offset<FBS.Transport.Tuple>) : FBS.Transport.Tuple.Pack(builder, _o.Tuple);
            var _srtp_parameters = _o.SrtpParameters == null ? default(Offset<FBS.SrtpParameters.SrtpParameters>) : FBS.SrtpParameters.SrtpParameters.Pack(builder, _o.SrtpParameters);
            return CreateDumpResponse(
              builder,
              _base,
              _tuple,
              _o.Rtx,
              _srtp_parameters);
        }
    }

    public class DumpResponseT
    {
        [JsonPropertyName("base")]
        public FBS.Transport.DumpT Base { get; set; }
        [JsonPropertyName("tuple")]
        public FBS.Transport.TupleT Tuple { get; set; }
        [JsonPropertyName("rtx")]
        public bool Rtx { get; set; }
        [JsonPropertyName("srtp_parameters")]
        public FBS.SrtpParameters.SrtpParametersT SrtpParameters { get; set; }

        public DumpResponseT()
        {
            this.Base = null;
            this.Tuple = null;
            this.Rtx = false;
            this.SrtpParameters = null;
        }
    }
}
