// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using System;
using Google.FlatBuffers;
using System.Text.Json.Serialization;

namespace FBS.WebRtcTransport
{
    public struct DtlsStateChangeNotification : IFlatbufferObject
    {
        private Table __p;
        public ByteBuffer ByteBuffer { get { return __p.bb; } }
        public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_5_26(); }
        public static DtlsStateChangeNotification GetRootAsDtlsStateChangeNotification(ByteBuffer _bb) { return GetRootAsDtlsStateChangeNotification(_bb, new DtlsStateChangeNotification()); }
        public static DtlsStateChangeNotification GetRootAsDtlsStateChangeNotification(ByteBuffer _bb, DtlsStateChangeNotification obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
        public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
        public DtlsStateChangeNotification __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

        public FBS.WebRtcTransport.DtlsState DtlsState { get { int o = __p.__offset(4); return o != 0 ? (FBS.WebRtcTransport.DtlsState)__p.bb.Get(o + __p.bb_pos) : FBS.WebRtcTransport.DtlsState.NEW; } }
        public string RemoteCert { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetRemoteCertBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
        public ArraySegment<byte>? GetRemoteCertBytes() { return __p.__vector_as_arraysegment(6); }
#endif
        public byte[] GetRemoteCertArray() { return __p.__vector_as_array<byte>(6); }

        public static Offset<FBS.WebRtcTransport.DtlsStateChangeNotification> CreateDtlsStateChangeNotification(FlatBufferBuilder builder,
            FBS.WebRtcTransport.DtlsState dtls_state = FBS.WebRtcTransport.DtlsState.NEW,
            StringOffset remote_certOffset = default(StringOffset))
        {
            builder.StartTable(2);
            DtlsStateChangeNotification.AddRemoteCert(builder, remote_certOffset);
            DtlsStateChangeNotification.AddDtlsState(builder, dtls_state);
            return DtlsStateChangeNotification.EndDtlsStateChangeNotification(builder);
        }

        public static void StartDtlsStateChangeNotification(FlatBufferBuilder builder) { builder.StartTable(2); }
        public static void AddDtlsState(FlatBufferBuilder builder, FBS.WebRtcTransport.DtlsState dtlsState) { builder.AddByte(0, (byte)dtlsState, 0); }
        public static void AddRemoteCert(FlatBufferBuilder builder, StringOffset remoteCertOffset) { builder.AddOffset(1, remoteCertOffset.Value, 0); }
        public static Offset<FBS.WebRtcTransport.DtlsStateChangeNotification> EndDtlsStateChangeNotification(FlatBufferBuilder builder)
        {
            int o = builder.EndTable();
            return new Offset<FBS.WebRtcTransport.DtlsStateChangeNotification>(o);
        }
        public DtlsStateChangeNotificationT UnPack()
        {
            var _o = new DtlsStateChangeNotificationT();
            this.UnPackTo(_o);
            return _o;
        }
        public void UnPackTo(DtlsStateChangeNotificationT _o)
        {
            _o.DtlsState = this.DtlsState;
            _o.RemoteCert = this.RemoteCert;
        }
        public static Offset<FBS.WebRtcTransport.DtlsStateChangeNotification> Pack(FlatBufferBuilder builder, DtlsStateChangeNotificationT _o)
        {
            if(_o == null)
                return default(Offset<FBS.WebRtcTransport.DtlsStateChangeNotification>);
            var _remote_cert = _o.RemoteCert == null ? default(StringOffset) : builder.CreateString(_o.RemoteCert);
            return CreateDtlsStateChangeNotification(
              builder,
              _o.DtlsState,
              _remote_cert);
        }
    }

    public class DtlsStateChangeNotificationT
    {
        [JsonPropertyName("dtls_state")]
        public FBS.WebRtcTransport.DtlsState DtlsState { get; set; }
        [JsonPropertyName("remote_cert")]
        public string RemoteCert { get; set; }

        public DtlsStateChangeNotificationT()
        {
            this.DtlsState = FBS.WebRtcTransport.DtlsState.NEW;
            this.RemoteCert = null;
        }
    }


}
