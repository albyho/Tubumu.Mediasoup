// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FBS.RtpParameters
{

    public enum Value : byte
    {
        NONE = 0,
        Boolean = 1,
        Integer32 = 2,
        Double = 3,
        String = 4,
        Integer32Array = 5,
    };

    public class ValueUnion
    {
        public Value Type { get; set; }
        public object Value_ { get; set; }

        public ValueUnion()
        {
            this.Type = Value.NONE;
            this.Value_ = null;
        }

        public T As<T>() where T : class { return this.Value_ as T; }
        public FBS.RtpParameters.BooleanT AsBoolean() { return this.As<FBS.RtpParameters.BooleanT>(); }
        public static ValueUnion FromBoolean(FBS.RtpParameters.BooleanT _boolean) { return new ValueUnion { Type = Value.Boolean, Value_ = _boolean }; }
        public FBS.RtpParameters.Integer32T AsInteger32() { return this.As<FBS.RtpParameters.Integer32T>(); }
        public static ValueUnion FromInteger32(FBS.RtpParameters.Integer32T _integer32) { return new ValueUnion { Type = Value.Integer32, Value_ = _integer32 }; }
        public FBS.RtpParameters.DoubleT AsDouble() { return this.As<FBS.RtpParameters.DoubleT>(); }
        public static ValueUnion FromDouble(FBS.RtpParameters.DoubleT _double) { return new ValueUnion { Type = Value.Double, Value_ = _double }; }
        public FBS.RtpParameters.StringT AsString() { return this.As<FBS.RtpParameters.StringT>(); }
        public static ValueUnion FromString(FBS.RtpParameters.StringT _string) { return new ValueUnion { Type = Value.String, Value_ = _string }; }
        public FBS.RtpParameters.Integer32ArrayT AsInteger32Array() { return this.As<FBS.RtpParameters.Integer32ArrayT>(); }
        public static ValueUnion FromInteger32Array(FBS.RtpParameters.Integer32ArrayT _integer32array) { return new ValueUnion { Type = Value.Integer32Array, Value_ = _integer32array }; }

        public static int Pack(Google.FlatBuffers.FlatBufferBuilder builder, ValueUnion _o)
        {
            switch(_o.Type)
            {
                default:
                    return 0;
                case Value.Boolean:
                    return FBS.RtpParameters.Boolean.Pack(builder, _o.AsBoolean()).Value;
                case Value.Integer32:
                    return FBS.RtpParameters.Integer32.Pack(builder, _o.AsInteger32()).Value;
                case Value.Double:
                    return FBS.RtpParameters.Double.Pack(builder, _o.AsDouble()).Value;
                case Value.String:
                    return FBS.RtpParameters.String.Pack(builder, _o.AsString()).Value;
                case Value.Integer32Array:
                    return FBS.RtpParameters.Integer32Array.Pack(builder, _o.AsInteger32Array()).Value;
            }
        }
    }


    static public class ValueVerify
    {
        static public bool Verify(Google.FlatBuffers.Verifier verifier, byte typeId, uint tablePos)
        {
            bool result = true;
            switch((Value)typeId)
            {
                case Value.Boolean:
                    result = FBS.RtpParameters.BooleanVerify.Verify(verifier, tablePos);
                    break;
                case Value.Integer32:
                    result = FBS.RtpParameters.Integer32Verify.Verify(verifier, tablePos);
                    break;
                case Value.Double:
                    result = FBS.RtpParameters.DoubleVerify.Verify(verifier, tablePos);
                    break;
                case Value.String:
                    result = FBS.RtpParameters.StringVerify.Verify(verifier, tablePos);
                    break;
                case Value.Integer32Array:
                    result = FBS.RtpParameters.Integer32ArrayVerify.Verify(verifier, tablePos);
                    break;
                default:
                    result = true;
                    break;
            }
            return result;
        }
    }


}
