// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using System.Text.Json.Serialization;

namespace FBS.RtpParameters
{

    using global::System;
    using global::System.Collections.Generic;
    using global::Google.FlatBuffers;

    public struct Double : IFlatbufferObject
    {
        private Table __p;
        public ByteBuffer ByteBuffer { get { return __p.bb; } }
        public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
        public static Double GetRootAsDouble(ByteBuffer _bb) { return GetRootAsDouble(_bb, new Double()); }
        public static Double GetRootAsDouble(ByteBuffer _bb, Double obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
        public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
        public Double __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

        public double Value { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }

        public static Offset<FBS.RtpParameters.Double> CreateDouble(FlatBufferBuilder builder,
            double value = 0.0)
        {
            builder.StartTable(1);
            Double.AddValue(builder, value);
            return Double.EndDouble(builder);
        }

        public static void StartDouble(FlatBufferBuilder builder) { builder.StartTable(1); }
        public static void AddValue(FlatBufferBuilder builder, double value) { builder.AddDouble(0, value, 0.0); }
        public static Offset<FBS.RtpParameters.Double> EndDouble(FlatBufferBuilder builder)
        {
            int o = builder.EndTable();
            return new Offset<FBS.RtpParameters.Double>(o);
        }
        public DoubleT UnPack()
        {
            var _o = new DoubleT();
            this.UnPackTo(_o);
            return _o;
        }
        public void UnPackTo(DoubleT _o)
        {
            _o.Value = this.Value;
        }
        public static Offset<FBS.RtpParameters.Double> Pack(FlatBufferBuilder builder, DoubleT _o)
        {
            if(_o == null)
                return default(Offset<FBS.RtpParameters.Double>);
            return CreateDouble(
              builder,
              _o.Value);
        }
    }

    public class DoubleT
    {
        public double Value { get; set; }

        public DoubleT()
        {
            this.Value = 0.0;
        }
    }


    static public class DoubleVerify
    {
        static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
        {
            return verifier.VerifyTableStart(tablePos)
              && verifier.VerifyField(tablePos, 4 /*Value*/, 8 /*double*/, 8, false)
              && verifier.VerifyTableEnd(tablePos);
        }
    }

}
