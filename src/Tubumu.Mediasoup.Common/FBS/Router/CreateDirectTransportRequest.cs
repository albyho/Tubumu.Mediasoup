// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using System.Text.Json.Serialization;

namespace FBS.Router
{

    using global::System;
    using global::System.Collections.Generic;
    using global::Google.FlatBuffers;

    public struct CreateDirectTransportRequest : IFlatbufferObject
    {
        private Table __p;
        public ByteBuffer ByteBuffer { get { return __p.bb; } }
        public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
        public static CreateDirectTransportRequest GetRootAsCreateDirectTransportRequest(ByteBuffer _bb) { return GetRootAsCreateDirectTransportRequest(_bb, new CreateDirectTransportRequest()); }
        public static CreateDirectTransportRequest GetRootAsCreateDirectTransportRequest(ByteBuffer _bb, CreateDirectTransportRequest obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
        public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
        public CreateDirectTransportRequest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

        public string TransportId { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTransportIdBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
        public ArraySegment<byte>? GetTransportIdBytes() { return __p.__vector_as_arraysegment(4); }
#endif
        public byte[] GetTransportIdArray() { return __p.__vector_as_array<byte>(4); }
        public FBS.DirectTransport.DirectTransportOptions? Options { get { int o = __p.__offset(6); return o != 0 ? (FBS.DirectTransport.DirectTransportOptions?)(new FBS.DirectTransport.DirectTransportOptions()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

        public static Offset<FBS.Router.CreateDirectTransportRequest> CreateCreateDirectTransportRequest(FlatBufferBuilder builder,
            StringOffset transport_idOffset = default(StringOffset),
            Offset<FBS.DirectTransport.DirectTransportOptions> optionsOffset = default(Offset<FBS.DirectTransport.DirectTransportOptions>))
        {
            builder.StartTable(2);
            CreateDirectTransportRequest.AddOptions(builder, optionsOffset);
            CreateDirectTransportRequest.AddTransportId(builder, transport_idOffset);
            return CreateDirectTransportRequest.EndCreateDirectTransportRequest(builder);
        }

        public static void StartCreateDirectTransportRequest(FlatBufferBuilder builder) { builder.StartTable(2); }
        public static void AddTransportId(FlatBufferBuilder builder, StringOffset transportIdOffset) { builder.AddOffset(0, transportIdOffset.Value, 0); }
        public static void AddOptions(FlatBufferBuilder builder, Offset<FBS.DirectTransport.DirectTransportOptions> optionsOffset) { builder.AddOffset(1, optionsOffset.Value, 0); }
        public static Offset<FBS.Router.CreateDirectTransportRequest> EndCreateDirectTransportRequest(FlatBufferBuilder builder)
        {
            int o = builder.EndTable();
            builder.Required(o, 4);  // transport_id
            builder.Required(o, 6);  // options
            return new Offset<FBS.Router.CreateDirectTransportRequest>(o);
        }
        public CreateDirectTransportRequestT UnPack()
        {
            var _o = new CreateDirectTransportRequestT();
            this.UnPackTo(_o);
            return _o;
        }
        public void UnPackTo(CreateDirectTransportRequestT _o)
        {
            _o.TransportId = this.TransportId;
            _o.Options = this.Options.HasValue ? this.Options.Value.UnPack() : null;
        }
        public static Offset<FBS.Router.CreateDirectTransportRequest> Pack(FlatBufferBuilder builder, CreateDirectTransportRequestT _o)
        {
            if(_o == null)
                return default(Offset<FBS.Router.CreateDirectTransportRequest>);
            var _transport_id = _o.TransportId == null ? default(StringOffset) : builder.CreateString(_o.TransportId);
            var _options = _o.Options == null ? default(Offset<FBS.DirectTransport.DirectTransportOptions>) : FBS.DirectTransport.DirectTransportOptions.Pack(builder, _o.Options);
            return CreateCreateDirectTransportRequest(
              builder,
              _transport_id,
              _options);
        }
    }

    public class CreateDirectTransportRequestT
    {
        public string TransportId { get; set; }

        public FBS.DirectTransport.DirectTransportOptionsT Options { get; set; }

        public CreateDirectTransportRequestT()
        {
            this.TransportId = null;
            this.Options = null;
        }
    }


    static public class CreateDirectTransportRequestVerify
    {
        static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
        {
            return verifier.VerifyTableStart(tablePos)
              && verifier.VerifyString(tablePos, 4 /*TransportId*/, true)
              && verifier.VerifyTable(tablePos, 6 /*Options*/, FBS.DirectTransport.DirectTransportOptionsVerify.Verify, true)
              && verifier.VerifyTableEnd(tablePos);
        }
    }

}
